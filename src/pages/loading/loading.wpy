<template>
  <view class="content">
    <view class="bc-box">
      <image class="bc-img" src="./pic-single_shop@2x.jpg" mode="widthFix"></image>
    </view>
    <view class="cover">
      <view class="cover-top">
        <image class="cover-top-img" src="./logo-white@2x.png"></image>
        <view class="cover-top-txt">更多的了解你</view>
        <view class="cover-top-txt">是为了更好的服务你</view>
      </view>
      <view class="btn-box">
        <button open-type="getUserInfo" bindgetuserinfo="wxGetUserInfo" lang="zh_CN" class="btn">
          <image class="wx-img" src="./logo-wechat@2x.png"></image>
          <view class="wx-login-txt">微信快捷登录</view>
        </button>
      </view>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import URIS from 'common/js/config'
  import User from 'api/user'
  import {ERR_OK} from 'api/base'
  import Tips from 'common/js/tips'
  const INFOURL = '/pages/recommend/recommend'
  import users from 'common/mixins/users'
  import base from 'common/mixins/base'

  export default class loading extends wepy.page {
    mixins = [users, base]
    config = {
      navigationBarTitleText: '登录',
      backgroundTextStyle: 'light',
      navigationBarBackgroundColor: '#767286',
      disableScroll: true
    }
    data = {
      imageUri: URIS.image,
      showLoad: 1,
      timer: null,
      targetPage: INFOURL,
      authorizationCount: 1
    }

    async show() {
      clearInterval(this.timer)
      this.timer = setInterval(() => {
        if (this.showLoad < 3) {
          this.showLoad++
        } else {
          this.showLoad = 1
        }
        this.$apply()
      }, 500)
      this.$apply()
    }

    onHide() {
      clearInterval(this.timer)
    }

    onUnload() {
      clearInterval(this.timer)
    }

    async onShow() {
      this.show()
    }

    navTo(type) {
      this.$parent.updateGlobalData('targetPage', '')
      if (type.indexOf('square') !== -1 || type.indexOf('recommend') !== -1 || type.indexOf('mine') !== -1) {
        this.$switch({
          url: `${type}`
        })
      } else if (type.indexOf('loading') !== -1) {
        this.$switch({url: INFOURL})
      } else {
        wepy.redirectTo({
          url: `${type}`
        })
      }
    }

    async onLoad(options) {
//      await this.$getUserInfo(false, true)
//        let data = options.param.split(',')
//        let param = {}
//        for (let item of data) {
//          item = item.split(':')
//          param[item[0]] = item[1]
//        }
      if (options.path) {
        this.targetPage = decodeURIComponent(options.path)
      } else if (this.$parent.globalData.targetPage) {
        this.targetPage = this.$parent.globalData.targetPage
      }
      const token = wepy.getStorageSync('token')
      if (token && options.type !== 'tokenOut') {
        this.navTo(this.targetPage)
      }
      this.$apply()
    }

    async _authorization() {
      const wxUser = await wepy.getUserInfo()
      const code = await this.$getCode()
      const data = {
        code,
        iv: wxUser.iv,
        encryptedData: wxUser.encryptedData
      }
      const Json = await User.authorise(data, false)
      if (Json.error !== ERR_OK && this.authorizationCount <= 5) {
        this.authorizationCount++
        await this._authorization()
        return
      } else if (Json.error !== ERR_OK && this.authorizationCount > 5) {
        Tips.error('登录失败，请重新登录')
        return false
      }
      this.authorizationCount = 1
      const res = Json.data
      let token = res.jk_token
      this.$apply()
      return token
    }

    methods = {
      async wxGetUserInfo(e) {
        if (e.detail.errMsg !== 'getUserInfo:ok') {
          return
        }
        const code = await this.$getCode()
        const wxUser = e.detail
        const data = {
          code,
          iv: wxUser.iv,
          encryptedData: wxUser.encryptedData
        }
        const Json = await User.authorise(data, false)
        if (Json.error !== ERR_OK) {
          return ''
        }
        const res = Json.data
        let token
        if (res.unauthorized) {
          token = await this._authorization()
        } else {
          token = res.jk_token
        }
        if (token) {
          wepy.setStorageSync('token', token)
          await this.$getUserInfo(true)
          this.navTo(this.targetPage)
        }
      }
    }
  }
</script>

<style lang="stylus">
  @import '../../common/stylus/variable'
  @import '../../common/stylus/mixin'
  .content
    height: 100vh
    width: 100vw
    overflow-y: hidden
    box-sizing: border-box
    background: $color-white
    position: relative
    .bc-box
      position: absolute
      width: 100%
      height: 100%
      overflow: hidden
      .bc-img
        position: absolute
        width: 100%
    .cover
      position: absolute
      width: 100%
      height: 100%
      background: rgba(112, 107, 129, 0.95)
      .cover-top
        padding-top: 32vw
        display: flex
        flex-direction: column
        align-items: center
        .cover-top-img
          width: 44.75px
          height: 47.4px
          margin-bottom: 14px
        .cover-top-txt
          font-size: $font-size-medium
          color: $color-white
          font-family: PingFangSC-Regular
          line-height: 21px
      .btn-box
        position: absolute
        left: 0
        bottom: 30px
        width: 100%
        height: 12vw
        box-sizing: border-box
        padding: 0 12px
        .btn
          width: 100%
          background: #1AC521
          height: 100%
          border-radius: 4px
          display: flex
          align-items: center
          justify-content: center
          .wx-img
            width: 24px
            height: 19.5px
            margin-right: 5.5px
          .wx-login-txt
            font-size: $font-size-medium-x
            color: $color-white
            font-family: PingFangSC-Regular
</style>
