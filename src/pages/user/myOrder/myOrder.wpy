<template>
  <view class="myOrder">
    <view class="myOrder-menuTab">
      <view wx:for="{{menuItems}}" wx:key="{{item}}" class="{{index==menuIdx?'myOrder-menuTab-item active':'myOrder-menuTab-item'}}" @tap="tabChange({{index}})">
        {{item}}
      </view>
    </view>

    <view class="myOrder-phoneTestBox" wx:if="{{isPhone===0}}">
      <PhoneTestHint></PhoneTestHint>
      <PhoneTest></PhoneTest>
    </view>

    <scroll-view scroll-y class="myOrder-orderBox" bindscrolltolower="orderLower">
      <view class="myOrder-noOrderMsg" wx:if="{{orderList.length===0}}">
        <image src="{{noOrderIcon[menuIdx]}}" wx:if="noOrder" class="myOrder-noOrderMsg-Img"></image>
        <view class="myOrder-noOrderMsg-txt">您还没有相关订单</view>
        <view class="myOrder-noOrderBtn" @tap="toRecommend">随便逛逛</view>
      </view>

      <view class="myOrder-orderList" wx:if="{{orderList.length > 0}}">
        <view class="myOrder-orderList-item" wx:for="{{orderList}}" @tap="showDetail({{item.id}},{{item.status}})" wx:key="{{item.id}}">
          <view class="myOrder-orderList-item-left">
            <image class="myOrder-orderList-item-logo" src="{{item.promotion.promotion_images[0].image.url}}"></image>
            <view class="myOrder-orderList-item-msg">
              <view class="myOrder-orderList-item-title">{{item.title}}</view>
              <view class="myOrder-orderList-item-count myOrder-orderList-item-detail" wx:if="{{menuIdx===0}}">数量: {{item.count}}</view>
              <view class="myOrder-orderList-item-time myOrder-orderList-item-detail" wx:if="{{menuIdx!==0}}">下单时间: {{item.created_at}}</view>
              <view class="myOrder-orderList-item-total myOrder-orderList-item-detail">总价: ￥{{item.total}}</view>
            </view>
          </view>
          <view class="myOrder-orderList-item-btnBox">
            <view class="myOrder-orderList-item-status">{{orderItemStatus[item.status]}}</view>
            <view class="myOrder-orderList-item-btn" catchtap="useCoupon({{item.id}},{{item.promotion.id}},{{item.promotion_type}})">{{orderItemBtnTxt[menuIdx]}}</view>
          </view>
        </view>
      </view>
    </scroll-view>

    <Appraise></Appraise>

  </view>
</template>

<script>
  /* eslint-disable no-undef */
  import wepy from 'wepy'
  import base from 'common/mixins/base'
  import PhoneTest from '@/base/phoneTest/phoneTest'
  import PhoneTestHint from '@/base/phoneTestHint/phoneTestHint'
  import getMyOrder from '@/api/myOrder'
  import Appraise from '@/base/appraise/appraise'

  export default class MyOrder extends wepy.page {
    mixins = [base]

    config = {
      navigationBarTitleText: '我的订单',
      navigationBarBackgroundColor: '#fff',
      navigationBarTextStyle: 'black',
      backgroundColor: '#F9F9F9'
    }

    components = {
      PhoneTest,
      PhoneTestHint,
      Appraise
    }

    data = {
      menuIdx: 1,
      menuItems: ['待付款', '待使用', '待评价', '退款/售后'],
      noOrderIcon: ['./image/pic-my_nopaid.png', './image/pic-my_noused.png', './image/pic-my_noevaluated.png', './image/pic-my_norefund.png'],
      orderItemStatus: ['待付款', '', '', '退款中', '退款完成', '已评价', '已关闭'],
      orderItemBtnTxt: ['付款', '进店使用', '评价', '再来一单'],
      isPhone: 0,
      LowerLoading: false,
      orderList: [],
      page: 1,
      nothingAdd: false
    }

    methods = {
      async tabChange(idx) {
        this.menuIdx = idx
        this.orderList = []
        this.page = 1
        this.nothingAdd = false
        let resList = await this._getOrderList(idx, this.page)
        this.orderList = resList
        this.$apply()
        this.loaded()
      },
      orderUpper() {
      },
      async orderLower() {
        if (!this.LowerLoading && !this.nothingAdd) {
          this.LowerLoading = true
          this.page++
          const res = await this._getOrderList(this.menuIdx, this.page)
          if (res.length === 0) {
            this.nothingAdd = true
          }
          this.orderList.push(...res)
          this.$apply()
          this.LowerLoading = false
          this.loaded()
        } else if (this.nothingAdd) {
          //到底
        }
      },
      showDetail(id, status) {
        let url = '/pages/user/myOrder-detail/myOrderDetail?status=' + status + '&id=' + id
        this.$navigate(url)
      },
      async useCoupon(orderId, couponId, type) {
        switch (this.menuIdx) {
          case 0:
            let data = {
              order_id: orderId
            }
            let res = await getMyOrder.paymentOrder(data)
            this.loaded()
            const {timestamp, nonceStr, signType, paySign} = res.pay_info
            const pay = await wepy.requestPayment({
              timeStamp: timestamp,
              nonceStr,
              package: res.pay_info.package,
              signType,
              paySign
            })
            if (pay.errMsg === 'requestPayment:ok') {
              this.load({idx: '0'})
            }
            break
          case 1:
            this.$navigate('/pages/coupon-use/couponUse?id=' + orderId)
            break
          case 2:
            this.$invoke('Appraise', 'showCover')
            this.$broadcast('sendCouponMsg', orderId, couponId)
            break
          case 3:
            let couponType
            if (type * 1 === 1) {
              couponType = 1
            } else if (type * 1 === 2) {
              couponType = 2
            }
            this.$navigate('/pages/coupon-detail/coupon-detail?id=' + couponId + '&type=' + couponType)
            break
        }
      },
      toRecommend() {
        wx.switchTab({url: '/pages/recommend/recommend'})
      }
    }

    async onLoad(option) {
      await this.load(option)
    }

    async load(option) {
      this.userInfo = this.$parent.globalData.user
      if (option.idx) {
        this.menuIdx = Number(option.idx)
      } else {
        this.menuIdx = 1
      }
      let resList = await this._getOrderList(this.menuIdx, 1)
      this.orderList.push(...resList)
      let customerId = wx.getStorageSync('customerId')
      if (customerId) {
        this.isPhone = 1
      } else {
        this.isPhone = 0
      }
      this.loaded()
    }

    async _getOrderList(idx, page) {
      return await getMyOrder.getOrderList(idx, page)
    }

    events = {
      'isPhoneOk': () => {
        this.isPhone = 1
        this.$apply()
      },
      'appraiseSuccess': async () => {
        this.menuIdx = 2
        this.page = 1
        this.nothingAdd = false
        let resList = await this._getOrderList(2, 1)
        this.orderList = resList
        this.$apply()
      }
    }
  }
</script>

<style lang="stylus">
  @import "../../../common/stylus/variable"

  page
    background: $color-background
    font-family: PingFangSC-Light

    .myOrder-menuTab
      display: flex
      height: 8vh
      padding-right: 8px
      box-sizing: border-box
      background: $color-highlight-background
      border-bottom: 1px solid $color-row-line

      .myOrder-menuTab-item
        font-size: $font-size-medium
        color: $color-text
        flex: 1
        line-height: 8vh
        text-align: center
        margin: 0 11px
        margin-bottom: -1rpx
        border-bottom: 0 none
        white-space: nowrap

      .myOrder-menuTab-item.active
        color: $color-text-t
        border-bottom: 2px solid $color-text-t


    .myOrder-phoneTestBox
      height: 55px

    .myOrder-orderBox
      max-height: 92vh

      .myOrder-noOrderMsg
        height: 160px
        background: $color-highlight-background
        border-bottom: 1px solid $color-row-line
        padding-top: 32px
        display: flex
        flex-direction: column
        align-items: center

        .myOrder-noOrderMsg-Img
          width: 92.5px
          height: 53px
          margin-bottom: 10px
          padding-left: 15px

        .myOrder-noOrderMsg-txt
          font-size: $font-size-small
          color: $color-text
          margin-bottom: 35px

        .myOrder-noOrderBtn
          width: 65.5px
          height: 24px
          border: 1px solid $color-row-line
          text-align: center
          line-height: 24px
          font-size: $font-size-small
          border-radius: 4rpx

          &:active
            border: 1px solid $color-button
            color: $color-button

      .myOrder-orderList-item
        position: relative
        height: 68.5px
        margin-top: 10px
        background: $color-highlight-background
        padding: 13.5px 11.5px
        display: flex
        justify-content: space-between

        .myOrder-orderList-item-left
          display: flex
          width: 80%

          .myOrder-orderList-item-logo
            width: 64px
            height: 64px
            border: 1px solid $color-row-line
            margin-right: 9px

          .myOrder-orderList-item-msg

            .myOrder-orderList-item-title
              font-size: $font-size-medium
              color: $color-text
              line-height: 20px
              margin-bottom: 11px

            .myOrder-orderList-item-detail
              font-size: $font-size-small
              color: #696671
              line-height: 16.5px


        .myOrder-orderList-item-btnBox
          width: 58px

          .myOrder-orderList-item-status
            font-size: $font-size-small-s
            color: $color-text-t
            text-align: right
            line-height: 15px

          .myOrder-orderList-item-btn
            position: absolute
            right: 12px
            bottom: 29px
            width: 57px
            height: 23px
            border: 1px solid #656079
            background: $color-button
            border-radius: 2px
            text-align: center
            line-height: 23px
            font-size: $font-size-small
            color: $color-white

</style>
