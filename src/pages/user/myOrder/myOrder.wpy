<template>
  <view class="myOrder">
    <scroll-view scroll-x class="myOrder-menuTab border-bottom-1px" scroll-with-animation="true" scrollLeft="{{leftIndex}}" bindscroll="setScroll">
      <!--'myOrder-menuTab-item ' + industry + '-border':'myOrder-menuTab-item'-->
      <view wx:for="{{menuItems}}" wx:key="{{index}}" class="{{index === menuIdx?'myOrder-menuTab-item ' + industry + '-border':'myOrder-menuTab-item'}}" @tap="tabChange({{item.type}},{{index}})">
        <text>{{item.title}}</text>
      </view>
    </scroll-view>

    <view class="myOrder-phoneTestBox" wx:if="{{isPhone===0}}">
      <PhoneTestHint></PhoneTestHint>
      <PhoneTest></PhoneTest>
    </view>

    <scroll-view scroll-y class="myOrder-orderBox"
                 bindscrolltolower="orderLower">
      <view class="myOrder-noOrderMsg border-bottom-1px" wx:if="{{noOrder}}">
        <image
          src="{{imageUrlHead + '/defaults/c-image/mine/pic-empty_order@2x.png'}}"
          wx:if="{{imageUrlHead}}" class="myOrder-noOrderMsg-Img"></image>
        <view class="myOrder-noOrderMsg-txt">您还没有相关订单</view>
        <view class="myOrder-noOrderBtn" @tap="toRecommend">随便逛逛</view>
      </view>

      <view class="myOrder-orderList" wx:if="{{orderList.length > 0}}">
        <view wx:for="{{orderList}}" wx:key="{{index}}">
          <!--<view class="myOrder-orderList-item" @tap="showDetail({{item.id}},{{item.status}})" wx:if="{{item.promotion_type !== 4}}">-->
            <!--<view class="myOrder-orderList-item-left">-->
              <!--<view class="myOrder-orderList-item-logo-box">-->
                <!--<image class="myOrder-orderList-item-logo" src="{{item.merchant_data.logo_image}}" mode="aspectFill"></image>-->
              <!--</view>-->
              <!--<view class="myOrder-orderList-item-msg">-->
                <!--<view class="myOrder-orderList-item-title">{{item.title}}</view>-->
                <!--<view class="myOrder-orderList-item-count myOrder-orderList-item-detail" wx:if="{{item.status === 0 && item.promotion_type !== 3}}">数量: {{item.count}}</view>-->
                <!--<view class="myOrder-orderList-item-time myOrder-orderList-item-detail" wx:if="{{item.status !== 0 && item.promotion_type !== 3}}">下单时间: {{item.created_at}}</view>-->
                <!--&lt;!&ndash;<view class="myOrder-orderList-item-detail" wx:if="{{item.status === 1 && item.promotion_type === 3}}">{{item.promotion.title ? item.promotion.title : '无优惠'}}</view>&ndash;&gt;-->
                <!--<view class="myOrder-orderList-item-total myOrder-orderList-item-detail">总价: ¥{{item.total}}</view>-->
              <!--</view>-->
            <!--</view>-->
            <!--<view class="myOrder-orderList-item-btnBox">-->
              <!--<view class="myOrder-orderList-item-status">{{item.promotion_type === 3 ? '付款成功' : orderItemStatus[item.status]}}</view>-->
              <!--<view class="myOrder-orderList-item-btn {{industry}}-bg" wx:if="{{item.promotion_type !== 3}}" catchtap="useCoupon({{item}})">{{orderItemBtnTxt[item.status]}}</view>-->
              <!--&lt;!&ndash;<view class="myOrder-orderList-item-btn {{industry}}-bg" wx:if="{{menuIdx===0 && item.promotion_type !== 3}}" catchtap="useCoupon({{item}})">{{orderItemBtnTxt[item.status]}}</view>&ndash;&gt;-->
              <!--<view class="myOrder-orderList-item-btn {{industry}}-bg" wx:if="{{item.promotion_type === 3}}" catchtap="orderDetail({{item.id}})">查看详情</view>-->
            <!--</view>-->
          <!--</view>-->
          <repeat key="index" index="index" item="item">
            <order-item :order.sync="item" :industry.sync="industry"></order-item>
          </repeat>
        </view>
      </view>
      <Underline></Underline>
    </scroll-view>

    <BackHome></BackHome>
    <Appraise></Appraise>
    <Toast></Toast>
    <popout></popout>
  </view>
</template>

<script>
  /* eslint-disable no-undef */
  import wepy from 'wepy'
  import base from 'common/mixins/base'
  import PhoneTest from '@/base/phoneTest/phoneTest'
  import PhoneTestHint from '@/base/phoneTestHint/phoneTestHint'
  import getMyOrder from '@/api/myOrder'
  import Appraise from '@/base/appraise/appraise'
  import URIS from 'common/js/config'
  import {ERR_OK} from '@/api/base'
  import Toast from '@/base/toast/toast'
  import Underline from '@/base/underline-block/underline-block'
  import BackHome from '@/base/back-home/back-home'
  import OrderItem from '@/base/order-item/order-item'
  import Popout from '@/base/integral-popout/integral-popout'
  import Shares from 'api/share'

  export default class MyOrder extends wepy.page {
    mixins = [base]

    config = {
      navigationBarTitleText: '我的订单',
      navigationBarBackgroundColor: '#fff',
      navigationBarTextStyle: 'black',
      backgroundColor: '#F9F9F9',
      disableScroll: true
    }

    components = {
      PhoneTest,
      PhoneTestHint,
      Appraise,
      Underline,
      Toast,
      BackHome,
      'popout': Popout,
      'order-item': OrderItem
    }

    data = {
      imageUrlHead: URIS.image,
      menuIdx: 0,
      menuItems: [
        {title: '全部', type: 4},
        {title: '待付款', type: 0},
        {title: '待成团', type: 5},
        {title: '待使用', type: 1},
        {title: '待评价', type: 2},
        {title: '退款/售后', type: 3}
      ],
      noOrderIcon: [URIS.image + '/defaults/c-image/mine/pic-my_nopaid.png', URIS.image + '/defaults/c-image/mine/pic-my_noused.png', URIS.image + '/defaults/c-image/mine/pic-my_noevaluated.png', URIS.image + '/defaults/c-image/mine/pic-my_norefund.png'],
      orderItemStatus: ['待付款', '待使用', '待评价', '退款中', '退款完成', '已评价', '已关闭', '退款失败', '退款失败', '已关闭'],
      orderItemBtnTxt: ['付款', '进店使用', '评价', '再来一单', '再来一单', '再来一单', '再来一单', '再来一单', '再来一单', '再来一单'],
      isPhone: 1,
      LowerLoading: false,
      orderList: [],
      page: 1,
      nothingAdd: false,
      noOrder: false,
      leftIndex: 0,
      leftTmp: 0
    }

    methods = {
      setScroll(e) {
        this.leftTmp = e.detail.scrollLeft * 1
      },
      async tabChange(type, idx, e) {
        let w = wepy.getSystemInfoSync().windowWidth
        let x = e.detail.x
        let num = w - x
        if (num < 66) {
          this.leftIndex = this.leftTmp + 70
        } else if (num > 270) {
          this.leftIndex = this.leftTmp - 70
        }
        this.menuIdx = idx
        this.orderList = []
        this.noOrder = false
        this.page = 1
        this.nothingAdd = false
        this.$invoke('Underline', 'hide')
        let resList = await this._getOrderList(type, this.page)
        if (resList.error !== ERR_OK) {
          this.loaded()
          return
        }
        this.orderList = resList.data
        this.noOrder = this.orderList.length === 0 ? 1 : false
        this.$apply()
        this.loaded()
      },
      orderUpper() {
      },
      async orderLower() {
        if (!this.LowerLoading && !this.nothingAdd) {
          this.LowerLoading = true
          this.page++
          let type = this.menuItems[this.menuIdx].type
          const res = await this._getOrderList(type, this.page)
          if (res.error !== ERR_OK) {
            this.loaded()
            this.$invoke('Toast', 'show', res.message)
            return
          }
          if (res.data.length === 0) {
            this.nothingAdd = true
            this.$invoke('Underline', 'show')
          }
          this.orderList.push(...res.data)
          this.$apply()
          this.LowerLoading = false
          this.loaded()
        } else if (this.nothingAdd) {
          // 到底
        }
      },
      showDetail(id, status) {
        let url = '/pages/user/myOrder-detail/myOrderDetail?status=' + status + '&id=' + id
        this.$navigate(url)
      },
      async useCoupon(item) {
        switch (item.status) {
          case 0:
            let data = {
              order_id: item.id
            }
            let res = await getMyOrder.paymentOrder(data)
            this.loaded()
            if (res.error !== ERR_OK) {
              this.$invoke('Toast', 'show', res.message)
              return
            }
            const {timestamp, nonceStr, signType, paySign} = res.data.pay_info
            const pay = await wepy.requestPayment({
              timeStamp: timestamp,
              nonceStr,
              package: res.data.pay_info.package,
              signType,
              paySign
            })
            if (pay.errMsg === 'requestPayment:ok') {
              this.load({idx: '0'})
              wepy.setStorageSync('tips', {order: true})
              this._getShareSoya(item.id)
            }
            break
          case 1:
            this.$navigate('/pages/coupon-use/couponUse?id=' + item.id + '&type=order')
            break
          case 2:
            this.$invoke('Appraise', 'showCover')
            this.$broadcast('sendCouponMsg', item.id, item.promotion.id)
            break
          default:
            let couponType
            if (item.promotion_type * 1 === 1) {
              couponType = 1
            } else if (item.promotion_type * 1 === 2) {
              couponType = 2
            }
            this.$navigate('/pages/coupon-detail/coupon-detail?id=' + item.promotion.id + '&type=' + couponType + '&currentMerchant=' + item.merchant_id)
            break
        }
      },
      orderDetail(id) {
        this.$navigate('/pages/user/myOrder-detail/myOrderDetail?id=' + id)
      },
      toRecommend() {
        wx.switchTab({url: '/pages/recommend/recommend'})
      }
    }

    async onLoad(option) {
      await this.showIndustry()
      this.load(option)
      this.$apply()
    }

    async onShow() {
      wepy.setStorageSync('tips', {order: false})
      const scene = wx.getStorageSync('scene')
      if (scene === 1014) {
        this.$invoke('BackHome', 'show')
      } else {
        this.$invoke('BackHome', 'hide')
      }
      this.$apply()
    }

    onHide() {
      this.$invoke('BackHome', 'hide')
    }

    onUnload() {
      this.$invoke('BackHome', 'hide')
    }

    async load(option) {
//     判断type值
      let type = option.idx ? option.idx * 1 : 4
      this.menuIdx = this.menuItems.findIndex((item) => item.type === type)

      this.nothingAdd = false
      this.$invoke('Underline', 'hide')
      this.userInfo = this.$parent.globalData.user
      let limit
      if (this.nothingAdd || this.orderList.length >= 100) {
        limit = 100
      } else {
        limit = Math.ceil(this.orderList.length / 10) * 10 || 10
      }

      let resList = await this._getOrderList(type, 1, limit)
      if (resList.error !== 0) {
        this.loaded()
        return
      }
      this.orderList = resList.data
      this.noOrder = this.orderList.length === 0 ? 1 : false
      let mobile = wx.getStorageSync('mobile')
      if (mobile) {
        this.isPhone = 1
      } else {
        this.isPhone = 0
      }
      this.loaded()
      this.$apply()
    }

    async _getOrderList(idx, page, limit = 10) {
      return await getMyOrder.getOrderList(idx, page, limit)
    }

    async _getShareSoya(id) {
      const resData = await Shares.getShareSoya('pay', id)
      if (resData.error !== ERR_OK) {
        this.loaded()
        this.$invoke('toast', 'show', resData.message)
        return
      }
      if (resData.error === ERR_OK && resData.code === 10002) {
        this.loaded()
        return
      }
      const res = resData.data
      let total = res.score_value
      if (this.showSoya) {
        this.loaded()

        this.$invoke('popout', 'openPoput', 'pay', total, '下单')
      }
      this.loaded()
    }

    events = {
      'isPhoneOk': () => {
        this.isPhone = 1
        this.$apply()
      },
      'appraiseSuccess': async () => {
        let type = this.menuItems[this.menuIdx].type
        this.page = 1
        this.nothingAdd = false
        let resList = await this._getOrderList(type, 1)
        this.loaded()
        if (resList.error !== ERR_OK) {
          this.$invoke('Toast', 'show', resList.message)
          return
        }
        this.orderList = resList.data
        this.noOrder = this.orderList.length === 0 ? 1 : false
        this.$apply()
      },
      orderDetail(order) {
        this.$navigate(`/pages/user/myOrder-detail/myOrderDetail?id=${order.id}`)
      },
      async followWork(item) {
        let status = item.status * 1
        switch (status) {
          case 0:
            let data = {
              order_id: item.id
            }
            let res = await getMyOrder.paymentOrder(data)
            this.loaded()
            if (res.error !== ERR_OK) {
              this.$invoke('Toast', 'show', res.message)
              return
            }
            const {timestamp, nonceStr, signType, paySign} = res.data.pay_info
            const pay = await wepy.requestPayment({
              timeStamp: timestamp,
              nonceStr,
              package: res.data.pay_info.package,
              signType,
              paySign
            })
            if (pay.errMsg === 'requestPayment:ok') {
              this.load({idx: '0'})
              this._getShareSoya(item.id)
            }
            break
          case 1:
            if (item.promotion_type * 1 === 5) {
              this.$navigate('/pages/user/myOrder-detail/myOrderDetail?id=' + item.id)
            } else {
              this.$navigate('/pages/coupon-use/couponUse?id=' + item.id + '&type=order')
            }
            break
          case 2:
            this.$invoke('Appraise', 'showCover')
            this.$broadcast('sendCouponMsg', item.id, item.promotion.id)
            break
          case 3:
          case 4:
          case 7:
          case 8:
            if (item.promotion_type * 1 === 4) {
              this.$navigate('/pages/group-detail/group-detail?from=order&id=' + item.group_id)
            } else {
              this.$navigate('../refund/refund?id=' + item.id)
            }
            break
          case 10:
            this.$navigate('/pages/group-detail/group-detail?from=order&id=' + item.group_id)
            break
          default:
            if (item.promotion_type * 1 === 5) {
              return
            }
            let couponType
            if (item.promotion_type * 1 === 2) {
              couponType = 2
            } else {
              couponType = 1
            }
            if (item.promotion_type * 1 === 4) {
              let groupId = item.group_activity_id
              this.$navigate('/pages/coupon-detail/coupon-detail?s=group&id=' + item.promotion.id + '&type=' + couponType + '&currentMerchant=' + item.merchant_id + '&groupId=' + groupId)
            } else {
              this.$navigate('/pages/coupon-detail/coupon-detail?id=' + item.promotion.id + '&type=' + couponType + '&currentMerchant=' + item.merchant_id)
            }
            break
        }
      }
    }
  }
</script>

<style lang="stylus">
  @import "../../../common/stylus/variable"

  page
    background: $color-background
    font-family: PingFangSC-Light

    .myOrder-menuTab
      height: 8vh
      box-sizing: border-box
      flex-wrap: nowrap
      background: $color-highlight-background
      white-space: nowrap
      width: auto
      overflow: hidden
      .myOrder-menuTab-item
        display: inline-block
        min-width: 18.67vw
        font-size: $font-size-medium
        color: $color-text
        line-height: 8vh
        height: 98%
        white-space: nowrap
        position: relative
        text-align: center
      .myOrder-menuTab-item-active
        color: $color-text-t
        &:before
          content: ''
          width: 30px
          height: 2px
          position: absolute
          left: 50%
          transform: translateX(-50%)
          bottom: 0px
          background: $color-theme

    .myOrder-phoneTestBox
      height: 55px

    .myOrder-orderBox
      max-height: 92vh

      .myOrder-noOrderMsg
        height: 160px
        background: $color-highlight-background
        padding-top: 32px
        display: flex
        flex-direction: column
        align-items: center

        .myOrder-noOrderMsg-Img
          width: 100px
          height: 80px
          margin-bottom: 10px

        .myOrder-noOrderMsg-txt
          font-size: $font-size-small
          color: $color-text
          margin-bottom: 15px

        .myOrder-noOrderBtn
          width: 65.5px
          height: 24px
          border: 0.5px solid $color-row-line
          text-align: center
          line-height: 24px
          font-size: $font-size-small
          border-radius: 4 rpx

          &:active
            border: 0.5px solid $color-button
            color: $color-button

      .myOrder-orderList-item
        position: relative
        height: 68.5px
        margin-top: 10px
        background: $color-highlight-background
        padding: 13.5px 11.5px
        display: flex
        justify-content: space-between

        .myOrder-orderList-item-left
          display: flex
          width: 80%
          .myOrder-orderList-item-logo-box
            width: 64px
            height: 64px
            border: 0.5px solid $color-row-line
            margin-right: 9px
            background: $color-master-gray
            border-radius: 2px
            overflow: hidden

            .myOrder-orderList-item-logo
              width: 64px
              height: 64px

          .myOrder-orderList-item-msg
            flex: 1
            overflow: hidden
            display: flex
            flex-direction: column
            justify-content: space-between

            .myOrder-orderList-item-title
              font-size: $font-size-medium
              color: $color-text
              line-height: 20px
              margin-bottom: 11px
              width: 100%
              overflow: hidden
              text-overflow: ellipsis
              white-space: nowrap

            .myOrder-orderList-item-detail
              font-size: $font-size-small
              color: #696671
              line-height: 16.5px

        .myOrder-orderList-item-btnBox
          width: 58px

          .myOrder-orderList-item-status
            font-size: $font-size-small-s
            color: $color-orange
            text-align: right
            line-height: 15px

          .myOrder-orderList-item-btn
            position: absolute
            right: 12px
            bottom: 29px
            width: 57px
            height: 23px
            background: $color-button
            border-radius: 2px
            text-align: center
            line-height: 23px
            font-size: $font-size-small
            color: $color-white

</style>
