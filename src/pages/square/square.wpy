<template>
  <map id="map"
       scale="18"
       longitude="{{longitude}}"
       latitude="{{latitude}}"
       controls="{{controls}}"
       bindcontroltap="controltap"
       markers="{{markers}}"
       bindmarkertap="markertap"
       polyline="{{polyline}}"
       bindtap="tapMap"
       bindregionchange="regionchange">
    <cover-view class="shop-modal {{showSlide ? 'show' : ''}}">
      <cover-view class="modal-bg-wrapper">
        <cover-image class="modal-bg" wx:if="{{imageUri}}"
                     src="{{imageUri + '/defaults/c-image/square/pic-s_bg@2x.png'}}"></cover-image>
      </cover-view>
      <cover-view class="modal">
        <cover-view class="location">
          <cover-image wx:if="{{imageUri}}"
                       src="{{imageUri + '/defaults/c-image/square/icon-s_location@2x.png'}}"
                       mode="scaleToFill" class="icon-location"></cover-image>
          <cover-view class="content">{{currentMerchant.particular_address}}
          </cover-view>
        </cover-view>
        <cover-view class="shop">
          <cover-view class="top" @tap="switchRecommend">
            <cover-view class="desc">
              <cover-view class="title">{{currentMerchant.shop_name}}
              </cover-view>
              <cover-view class="subhead">{{currentMerchant.describe}}
              </cover-view>
            </cover-view>
            <cover-view class="logo-wrapper">
              <cover-image wx:if="{{imageUri}}"
                           src="{{imageUri + '/defaults/c-image/square/pic-s_shopbg@2x.png'}}"
                           class="image"></cover-image>
              <cover-image wx:if="{{imageUri && currentMerchant.code_name}}"
                           class="industry"
                           src="{{imageUri + '/defaults/c-image/square/icon-s_' + currentMerchant.code_name + '@2x.png'}}"></cover-image>
              <cover-image wx:if="{{currentMerchant.logo_image}}"
                           src="{{currentMerchant.logo_image}}"
                           class="logo"></cover-image>
            </cover-view>
            <cover-view class="comment">
              <cover-view class="comment-content">
                <cover-view class="stars">
                  <repeat for="{{stars}}" index="{{index}}" key="{{index}}">
                    <cover-image wx:if="{{imageUri}}"
                                 src="{{imageUri + '/defaults/c-image/square/icon-s_evaluate@2x.png'}}"
                                 class="icon-star"></cover-image>
                  </repeat>
                  <cover-view class="star-level">
                    {{currentMerchant.star_level !== '0.0' ? currentMerchant.star_level : '5.0'}}
                  </cover-view>
                </cover-view>
                <cover-view class="store">
                  {{currentMerchant.favorite_count}}人已收藏
                </cover-view>
              </cover-view>
            </cover-view>
          </cover-view>
          <cover-view class="bottom">
            <cover-image class="line"
                         wx:if="{{imageUri}}"
                         src="{{imageUri + '/defaults/c-image/square/pic-s_line@2x.png'}}"></cover-image>
            <cover-view class="content-wrapper">
              <cover-view class="item">
                <cover-image wx:if="{{imageUri}}"
                             src="{{imageUri + '/defaults/c-image/square/icon-s_distance@2x.png'}}"
                             class="icon"></cover-image>
                <cover-view class="content">距离{{distance}}米</cover-view>
              </cover-view>
              <cover-view class="item">
                <cover-image wx:if="{{imageUri}}"
                             src="{{imageUri + '/defaults/c-image/square/icon-s_swalk@2x.png'}}"
                             class="icon"></cover-image>
                <cover-view class="content">步行{{duration}}分钟</cover-view>
              </cover-view>
              <cover-view class="item" @tap="openLocation">
                <cover-image wx:if="{{imageUri}}"
                             src="{{imageUri + '/defaults/c-image/square/icon-s_navigation@2x.png'}}"
                             class="icon"></cover-image>
                <cover-view class="content">开始导航</cover-view>
              </cover-view>
              <cover-view class="item" @tap="makePhoneCall">
                <cover-image wx:if="{{imageUri}}"
                             src="{{imageUri + '/defaults/c-image/square/icon-s_tel@2x.png'}}"
                             class="icon"></cover-image>
                <cover-view class="content">打电话</cover-view>
              </cover-view>
            </cover-view>
          </cover-view>
        </cover-view>
        <cover-view class="tip-wrapper" @tap="switchRecommend">
          <cover-view class="hot-wrapper">
            <cover-image class="hot"
                         wx:if="{{imageUri}}"
                         src="{{imageUri + '/defaults/c-image/square/pic-s_hot@2x.png'}}"></cover-image>
          </cover-view>
          <cover-view class="tips">
            <cover-view class="box"
                        style="height: {{scrollHeight}}px;transition: {{transition}};transform: {{transform}}">
              <repeat for="{{tips}}" key="index" index="index" item="item">
                <cover-view class="tip">
                  <cover-view class="item-wrapper">
                    <cover-view class="icon-wrapper">
                      <cover-image class="icon"
                                   wx:if="{{imageUri}}"
                                   src="{{imageUri + '/defaults/c-image/square/pic-s_activity@2x.png'}}"></cover-image>
                    </cover-view>
                    <cover-view class="word">
                      {{item.activity}}活动开启中
                    </cover-view>
                  </cover-view>
                  <cover-view class="item-wrapper">
                    <cover-view class="icon-wrapper">
                      <cover-image class="icon"
                                   wx:if="{{imageUri}}"
                                   src="{{imageUri + '/defaults/c-image/square/pic-s_coupon@2x.png'}}"></cover-image>
                    </cover-view>
                    <cover-view class="word">
                      {{item.title ? item.title + '正在疯抢中' : '您的优惠券正在路上'}}
                    </cover-view>
                  </cover-view>
                </cover-view>
              </repeat>
              <cover-view class="tip" wx:if="{{tips.length > 0}}">
                <cover-view class="item-wrapper">
                  <cover-view class="icon-wrapper">
                    <cover-image class="icon"
                                 wx:if="{{imageUri}}"
                                 src="{{imageUri + '/defaults/c-image/square/pic-s_activity@2x.png'}}"></cover-image>
                  </cover-view>
                  <cover-view class="word">
                    {{tips[0].activity}}活动开启中
                  </cover-view>
                </cover-view>
                <cover-view class="item-wrapper">
                  <cover-view class="icon-wrapper">
                    <cover-image class="icon"
                                 wx:if="{{imageUri}}"
                                 src="{{imageUri + '/defaults/c-image/square/pic-s_coupon@2x.png'}}"></cover-image>
                  </cover-view>
                  <cover-view class="word">
                    {{tips[0].title ? tips[0].title + '正在疯抢中' : '您的优惠券正在路上'}}
                  </cover-view>
                </cover-view>
              </cover-view>
            </cover-view>
          </cover-view>
        </cover-view>
      </cover-view>
    </cover-view>
  </map>
</template>
<script>
  import wepy from 'wepy'
  import users from 'common/mixins/users'
  import base from 'common/mixins/base'
  import {ERR_OK} from 'api/base'
  import Merchants from 'api/merchants'
  import URIS from 'common/js/config'
  import GDMap from 'common/libs/amap-wx'

  export default class Square extends wepy.page {
    mixins = [users, base]

    data = {
      imageUri: URIS.image,
      firstUpdate: false,
      map: false,
      isControlSlide: false,
      showSlide: true,
      location: {},
      longitude: '',
      latitude: '',
      moveLongitude: '',
      moveLatitude: '',
      merchants: [],
      currentMerchant: {},
      stars: [],
      distance: '',
      duration: '',
      locations: {},
      markers: [],
      polyline: [],
      controls: [],
      includePoints: [],
      promotions: [],
      bigMarkerIndex: 0,
      activeMarkerId: '',
      tips: [],
      scrollHeight: 60,
      activeIndex: 0,
      transform: '',
      transition: ''
    }

    async onLoad() {
      this._newMap()
      await this.load()
      this.loaded()
    }

    async onShow() {
      this.clearTimer()
      await this.show()
      wepy.setNavigationBarTitle({
        title: wepy.getStorageSync('shop').shop_name
      })
      this.loaded()
    }

    onHide() {
      this.clearTimer()
      this.isControlSlide = true
    }

    _newMap() {
      this.gdmapsdk = new GDMap.AMapWX({key: 'd3950730147fbf5fe991ecc0344968b4'})
    }

    async load() {
      await this.isAuthorise()
      await this._newMapContext()
    }

    async show() {
      await this._setLoaction()
      await this._setControls()
      await this._getPlazaMerchants()
//      await this._translateMarkers()
      if (this.isControlSlide) {
        this.controlSlide()
      }
    }

    controlSlide() {
      const activeIndex = this.markers.find((item) => item.id === this.activeMarkerId)
      if (activeIndex === -1) {
        this.showSlide = false
        this.$apply()
        return
      }
      this.activeIndex = 0
      this.transition = ''
      this.transform = 'translate3d(0, 0, 0)'
      this._setTipTimer()
    }

    async _newMapContext() {
      this.mapContext = wepy.createMapContext('map')
    }

    async _setLoaction() {
      const res = await wepy.getLocation({type: 'gcj02'})
      this.location = {
        latitude: res.latitude,
        longitude: res.longitude
      }
      const location = [{
        id: 0,
        iconPath: './icon-s_sister@2x.png',
        latitude: res.latitude,
        longitude: res.longitude,
        width: 18,
        height: 27
      }]
      this.locations = location
      this.$apply()
    }

    async _setControls() {
      const res = await wepy.getSystemInfo()
      let width = res.windowWidth
      let height = res.windowHeight
      this.controls.push({
        id: 1,
        iconPath: './icon-s_return@2x.png',
        clickable: true,
        position: {
          width: 36,
          height: 36,
          left: width - 49,
          top: height - 85
        }
      })
    }

    async _getPlazaMerchants() {
      const json = await Merchants.getPlazaMerchants()
      if (json.error === ERR_OK) {
        const res = json.data
        this.merchants = res
        res.forEach((item) => {
          if (item.current_merchant) {
            console.log(item)
            this.activeMarkerId = item.id
            this.longitude = item.longitude
//            this.latitude = item.latitude
            this.latitude = item.latitude + 0.001
            this.$apply()
          }
        })
        const markers = res.map((item) => {
          if (item.id === this.activeMarkerId) {
            return {
              iconPath: `./icon-s_${item.industry.code_name}@2x.png`,
              id: item.id,
              latitude: item.latitude,
              longitude: item.longitude,
              width: 48,
              height: 50,
              hasActivity: item.has_activity
            }
          }
          return {
            iconPath: `./icon-s_${item.industry.code_name}@2x.png`,
            id: item.id,
            latitude: item.latitude,
            longitude: item.longitude,
            width: 32,
            height: 34,
            hasActivity: item.has_activity
          }
        })
        this.markers = [...this.locations, ...markers]
        this.bigMarkerIndex = this.markers.findIndex((item) => item.id === this.activeMarkerId)
        this._setPolyline(this.markers[this.bigMarkerIndex].id)
        this._scaleMarker(1)
        const currentMerchant = res.find((item) => item.id === this.activeMarkerId)
        await this._getMerchantDetail(currentMerchant.merchant_id)
//          setTimeout(() => {
//            this.showSlide = true
//            this.$apply()
//          }, 3000)
        this._setIncludePoints([])
        this.$apply()
      }
    }

    _setIncludePoints(points) {
      this.includePoints = points
      this.$apply()
    }

    _setPolyline(id) {
      const location = this.markers.find((item) => item.id === 0)
      const target = this.markers.find((item) => item.id === id)
      this.polyline = [{
        points: [
          {
            latitude: location.latitude,
            longitude: location.longitude
          }, {
            latitude: target.latitude,
            longitude: target.longitude
          }
        ],
        color: '#706B82AA',
        width: 2,
        dottedLine: true
      }]
      this.$apply()
    }

    async _translateMarkers() {
      this.markers.forEach((item) => {
//        console.log(item)
      })
    }

    async _getMerchantDetail(id) {
      const json = await Merchants.getMerchantsDetail(id)
      if (json.error === ERR_OK) {
        const res = json.data
        this.currentMerchant = res
        let shop = wepy.getStorageSync('shop')
        shop.shop_name = res.shop_name
        wepy.setStorageSync('shop', shop)
        this.promotions = res.promotions
        const starLevel = res.star_level === '0.0' ? 5 : res.star_level
        this.stars = new Array(Math.floor(starLevel))

        this.$apply()
        this.loaded()
        this._setTips()
        this._caculateDistance()
        this._setTipInterval()
      }
    }

    _setTips() {
      const activities = this.currentMerchant.activities
      const promotions = this.promotions
      let tips = []
      for (let key in activities) {
        if (activities[key]) {
          tips.push({activity: this._translateActivityKey(key)})
        }
      }
      tips.forEach((item, index) => {
        let init = {title: ''}
        if (promotions[index]) {
          init = promotions[index]
        }
        item = Object.assign(item, init)
      })
      if (tips.length) {
        tips.push(tips[0])
      }
      this.tips = tips
    }

    _translateActivityKey(key) {
      switch (key) {
        case 'lucky_draw':
          return '幸运大转盘'
        case 'sign':
          return '签到红包'
        case 'video_live':
          return '直播优惠'
        case 'share':
          return '分享有礼'
        default:
          return ''
      }
    }

    _caculateDistance() {
      // 腾讯
//      this.qqmapsdk.calculateDistance({
//        mode: 'driving',
//        from: this.location,
//        to: [{
//          latitude: this.currentMerchant.latitude,
//          longitude: this.currentMerchant.longitude
//        }],
//        success: (res) => {
//          console.log(res)
//          const result = res.result.elements[0]
//          this.distance = Math.floor(result.distance)
//          this.duration = Math.floor(result.duration / 60)
//          this.$apply()
//        }
//      })
      // 高德
      this.gdmapsdk.getWalkingRoute({
        origin: this.location.longitude + ',' + this.location.latitude,
        destination: this.currentMerchant.longitude + ',' + this.currentMerchant.latitude,
        success: (res) => {
          const result = res.paths[0]
          this.distance = Math.floor(result.distance)
          this.duration = Math.floor(result.duration / 60)
          this.$apply()
        }
      })
    }

    _scaleMarker(type) {
      const index = this.bigMarkerIndex
      if (index === 0) {
        return
      }
      this.markers[index].width = type === 1 ? 48 : 32
      this.markers[index].height = type === 1 ? 50 : 34
      this.$apply()
    }

    _setTipInterval() {
      const tipsLength = this.tips.length
      this.scrollHeight = 60 * tipsLength
      this._setTipTimer()
    }

    _setTipTimer() {
      const tipsLength = this.tips.length
      if (!tipsLength) {
        return
      }
      clearInterval(this.tipTimer)
      this.tipTimer = setInterval(() => {
        this.activeIndex += 1
        if (this.activeIndex === tipsLength) {
          this.tipTimeOuter = setTimeout(() => {
            this.activeIndex = 0
            this.transition = ''
            this.transform = 'translate3d(0, 0, 0)'
            this.$apply()
          }, 500)
        } else {
          this.transition = 'all .5s'
          this.transform = `translate3d(0, -${this.activeIndex * 60}px, 0)`
        }
        this.$apply()
      }, 3000)
    }

    clearData() {
      this.clearTimer()
      this._scaleMarker(0)
      this._setPolyline(0)
      this.$apply()
    }

    clearTimer() {
      this.activeIndex = 0
      this.tipTimer && clearInterval(this.tipTimer)
      this.tipTimeOuter && clearTimeout(this.tipTimeOuter)
      this.$apply()
    }

    methods = {
      switchRecommend() {
        const merchantId = this.currentMerchant.merchant_id
//        this.$parent.updateGlobalData('merchantId', merchantId)
        wepy.setStorageSync('merchantId', merchantId)
        wepy.switchTab({url: '/pages/recommend/recommend'})
      },
      async tapMap(e) {
//        if (!this.showSlide) {
//          return
//        }
//        this.clearData()
//        this.showSlide = false
      },
      async regionchange(e) {
//        this.mapContext.getCenterLocation({
//          success: (res) => {
//            this.moveLongitude = res.longitude
//            this.moveLatitude = res.latitude
//            if ((this.moveLongitude !== this.longitude || this.moveLatitude !== this.latitude) && this.showSlide) {
//              this.clearData()
//              this.showSlide = false
//            }
//            this.$apply()
//          }
//        })
      },
      controltap(e) {
        if (e.controlId === 1) {
          this.latitude = this.moveLatitude
          this.longitude = this.moveLongitude
          setTimeout(() => {
            this.latitude = this.location.latitude
            this.longitude = this.location.longitude
            this.$apply()
          }, 20)
        }
      },
      async markertap(e) {
        let markerId = e.markerId
        if (this.activeMarkerId === markerId && this.showSlide) {
          return
        }
        this.activeMarkerId = markerId
        this.clearData()
        if (markerId === 0) {
          return
        }
        let currentMerchant = this.merchants.find((item) => item.id === markerId)
        await this._getMerchantDetail(currentMerchant.merchant_id)
        this.activeIndex = 0
        this.transition = ''
        this.transform = 'translate3d(0, 0, 0)'
        this._setPolyline(markerId)
        this.bigMarkerIndex = this.markers.findIndex((item) => item.id === markerId)
        this._scaleMarker(1)
        this.$apply()
        setTimeout(() => {
          if (!this.showSlide) {
            this.showSlide = true
          }
          this.transition = 'all .5s'
          this.$apply()
        }, 500)
      },
      makePhoneCall() {
        const phone = this.currentMerchant.mobile
        wepy.makePhoneCall({phoneNumber: phone})
      },
      openLocation() {
        wepy.openLocation({
          latitude: this.currentMerchant.latitude,
          longitude: this.currentMerchant.longitude,
          scale: 28,
          name: this.currentMerchant.shop_name,
          address: this.currentMerchant.particular_address
        })
      }
    }

    // 分享
    onShareAppMessage() {
      let merchantId = wepy.getStorageSync('merchantId')
      return {
        title: wepy.getStorageSync('shop').shop_name,
        path: `/pages/square/square?merchantId=${merchantId}`
      }
    }

    config = {
      navigationBarTitleText: ''
    }
  }

</script>
<style lang="stylus">
  @import "../../common/stylus/variable.styl"
  @import "../../common/stylus/mixin.styl"

  #map
    width: 100%
    height: 100vh
    .shop-modal
      position: relative
      width: 100%
      height: 211px
      padding: 0 10px
      padding-top: 10px
      padding-bottom: 3px
      box-sizing: border-box

      .modal-bg-wrapper
        position: absolute
        top: 0
        left: 0
        display: flex
        padding: 0
        box-sizing: border-box
        left: 0
        top: 0
        .modal-bg
          display: flex
          width: 100%
          height: 100%
      .modal
        position: relative
        width: 100%
        height: 100%
        border-radius: 3px
        background-color: $color-white
        .location
          display: flex
          align-items: center
          height: 30px
          padding-left: 10px
          font-size: $font-size-small
          color: $color-text
          background: $color-background
          .icon-location
            display: flex
            width: 10px
            height: 10px
            margin-right: 3px
          .content
            display: flex
            flex: 1
        .shop
          width: 100%
          .top
            width: 100%
            display: flex
            height: 69.75px
            .desc
              flex: 1
              display: flex
              flex-direction: column
              justify-content: center
              padding-left: 10px
              color: $color-text
              position: relative
              .title
                width: 100%
                margin-bottom: 2.5px
                font-size: $font-size-medium-x
                overflow: hidden
                text-overflow: ellipsis
                white-space: nowrap
                position: absolute
                left: 10px
                top: 18px
              .subhead
                position: absolute
                left: 10px
                top: 45px
                font-size: $font-size-small-s
            .logo-wrapper
              position: relative
              flex: 0 0 65px
              display: flex
              align-items: center
              justify-content: center
              .image
                display: flex
                width: 65px
                height: 52px
              .industry
                position: absolute
                top: 13.5px
                left: 24.5px
                display: flex
                width: 12px
                height: 12px
                border-radius: 50%
              .logo
                position: absolute
                bottom: 11.25px
                right: 3px
                display: flex
                width: 24px
                height: 24px
                border-radius: 100%
            .comment
              flex: 1
              display: flex
              flex-direction: column
              justify-content: center
              align-items: center
              position: relative
              .comment-content
                position: absolute
                left: 50%
                top: 50%
                transform: translate(-50%, -50%)
                .stars
                  display: flex
                  align-items: center
                  font-size: $font-size-small-s
                  .icon-star
                    display: flex
                    margin-right: 1.5px
                    width: 10px
                    height: 10px
                  .star-level
                    display: flex
                .store
                  margin-top: 8px
                  font-size: $font-size-small-s
                  color: $color-text
          .bottom
            position: relative
            height: 38.25px
            .line
              position: absolute
              top: 0
              left: 0
              width: 100%
              height: 100%
            .content-wrapper
              position: absolute
              top: 0
              left: 0
              display: flex
              width: 100%
              height: 100%
              .item
                flex: 1
                display: flex
                align-items: center
                justify-content: center
                box-sizing: border-box
                font-size: $font-size-small-s
                &:nth-child(4) .icon
                  padding-left: 20px
                .icon
                  display: flex
                  width: 10px
                  height: 10px
                  margin-right: 1px
                .content
                  width: 60px
                  display: flex
    .tip-wrapper
      display: flex
      height: 60px
      padding-left: 10px
      .hot-wrapper
        flex: 0 0 50px
        width: 50px
        display: flex
        align-items: center
        justify-content: center
        .hot
          display: flex
          width: 50px
          height: 41px
      .tips
        flex: 1
        height: 60px
        padding-left: 10px
        .box
          transform: translate3d(0, 0, 0)
          .tip
            display: flex
            flex-direction: column
            justify-content: center
            height: 60px
            .item-wrapper
              display: flex
              align-items: center
              &:first-child
                margin-bottom: 7px
              .icon-wrapper
                flex: 0 0 30px
                width: 30px
                .icon
                  display: flex
                  width: 30px
                  height: 14px
              .word
                flex: 1
                display: flex
                margin-left: 5px
                font-size: $font-size-small
                color: $color-text
</style>
