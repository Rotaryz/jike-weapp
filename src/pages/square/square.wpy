<template>
  <view class="view-page">
    <view class="view-scroll">
      <swiper class="swiper" bindchange="swBindchange"  current="{{itemId}}">
        <repeat for="{{merchantInfos}}" key="index" index="index" item="item">
          <swiper-item class="item-swi">
            <view class="swiper-info"></view>
            <view class="swiper-info-s">
              <view class="swiper-info-title" @tap="offShop({{item}})">
                <view class="swiper-info-shop">
                  <view class="view_1">{{item.shop_name}}</view>
                  <view class="view_2">{{item.distance}}米</view>
                </view>
                <view class="swiper-info-remark">
                  <view class="view_1">
                    <view class="view_1_1"><view class="bg"></view>大众点评{{item.shop_power}}分</view>
                    <view class="view_1_2" wx:if="{{item.has_groupon}}">团</view>
                    <view class="view_1_2">买</view>
                    <view class="view_1_2" wx:if="{{item.has_promotion}}">券</view>
                  </view>
                  <view class="view_2">
                    <image src="{{imageUri + '/defaults/c-image/square/icon-s_right2@2x.png'}}"></image>
                  </view>
                </view>
              </view>
              <view class="border-1px"></view>
              <view class="swiper-info-nav">
                <view class="nav-item" @tap="offShop({{item}},0)">
                  <image src="{{imageUri + '/defaults/c-image/square/icon-choiceness@2x.png'}}"></image>
                  <view>精选优惠</view>
                </view>
                <view class="nav-item" @tap="offShop({{item}},1)">
                  <image src="{{imageUri + '/defaults/c-image/square/icon-content@2x.png'}}"></image>
                  <view>优质内容</view>
                </view>
                <view class="nav-item" @tap="offShop({{item}},2)">
                  <image src="{{imageUri + '/defaults/c-image/square/icon-pay@2x.png'}}"></image>
                  <view>快捷买单</view>
                </view>
              </view>
            </view>
            <image class="item-img" src="{{item.shop_image}}"></image>
          </swiper-item>
        </repeat>
      </swiper>
      <view class="swiper-active">
        <view class="swiper-active-t">
          <repeat for="{{merchantInfos}}" key="index" index="index" item="item">
            <view class="item-swi {{index === topFlag ? 'action' : ''}}"></view>
          </repeat>
        </view>
      </view>
    </view>
    <map id="map"
         scale="{{scale}}"
         show-location="true"
         longitude="{{longitude}}"
         latitude="{{latitude}}"
         controls="{{controls}}"
         markers="{{markers}}"
         polyline="{{polyline}}"
         bindcontroltap="controltap"
         bindmarkertap="markertap"
         bindregionchange="regionchange">
      <integral-popout></integral-popout>
    </map>
  </view>
</template>
<script>
  import wepy from 'wepy'
  import users from 'common/mixins/users'
  import base from 'common/mixins/base'
  import {ERR_OK} from 'api/base'
  import Merchants from 'api/merchants'
  import URIS from 'common/js/config'
  import GDMap from 'common/libs/amap-wx'
  import IntegralPopout from '@/base/integral-popout/integral-popout'
  // const json = await Merchants.getPlazaMerchantsNew()
  const CURRENT = 0
  export default class Square extends wepy.page {
    mixins = [users, base]
    components = {
      'integral-popout': IntegralPopout
    }
    data = {
      imageUri: URIS.image,
      firstUpdate: false,
      map: false,
      isControlSlide: false,
      showSlide: true,
      location: {},
      longitude: 0,
      latitude: 0,
      moveLongitude: '',
      moveLatitude: '',
      merchants: [],
      currentMerchant: {},
      stars: [],
      distance: '',
      duration: '',
      locations: {},
      markers: [],
      polyline: [],
      controls: [],
      includePoints: [],
      promotions: [],
      bigMarkerIndex: 0,
      activeMarkerId: '',
      tips: [],
      scrollHeight: 60,
      activeIndex: 0,
      transform: '',
      transition: '',
      titleList: [],
      topFlag: 0,
      scale: 18,
      merchantInfos: [],
      senceInfos: [],
      itemId: '',
      mapContext: {}
    }

    async onLoad() {
      await this._init()
    }

    // 初始化
    async _init() {
      this._newMapGD()
      await this.isAuthorise()
      await this._getVia()
      await this._getMapContext()
    }
    // 创建高德地图
    _newMapGD() {
      this.gdmapsdk = new GDMap.AMapWX({key: 'd3950730147fbf5fe991ecc0344968b4'})
    }
    // 获取微信头像
    async _getVia() {
      const userInfo = await this.$getUser()
      this.avatarUrl = userInfo.avatarUrl
      this.$apply()
    }
    // 获取map上下文
    async _getMapContext() {
      this.mapContext = await wepy.createMapContext('map')
    }
    async onShow() {
      await this._toShowInit()
    }
    // 显示初始化
    async _toShowInit() {
      // await this._getAllSenceLocation()
      await this._setControls()
      await this._getShopList()
      await this._setSenceLocation(this.selectOption)
      await this._addSenceIcon()
      await this._addIcons()
      this.loaded()
    }
    // 获取所有场景信息
    async _getAllSenceLocation() {
      let current = await this._getLocationInfo(CURRENT)
      this._setSenceInfos(CURRENT, current)
      this.$apply()
    }
    // 获取当前的经纬度
    async _getLocationInfo(type) {
      let longitude = 0
      let latitude = 0
      if (type * 1) {
        type = Math.abs(type)
        const res = await Merchants.getDimension(type)
        if (res.error === ERR_OK) {
          longitude = res.data.app_longitude
          latitude = res.data.app_latitude
        }
      } else {
        const res = await wepy.getLocation({type: 'gcj02'})
        latitude = res.latitude
        longitude = res.longitude
      }
      return {longitude, latitude}
    }

    // 设置当前场景信息
    async _setSenceInfos(id, res) {
      // 经纬度都为0时return
      if (!(res.longitude && res.latitude)) return
      let iconPath = '' // ./icon-s_sister@2x.png
      this.senceInfos[id] = {
        id,
        longitude: res.longitude,
        latitude: res.latitude,
        width: 18,
        height: 18,
        iconPath: iconPath
      }
      this.$apply()
    }
    // 获取单店信息
    async _getShopList() {
      const json = await Merchants.getPlazaMerchantsNew()
      if (json.error === ERR_OK) {
        const res = json.data
        // /** 模拟数据 **/
        // for (let i = 0; i < 5; i++) {
        //   this.merchantInfos.push(Object.assign({}, res[0]))
        // }
        // this.merchantInfos.forEach((item, index) => {
        //   item.id = index + 1
        //   item.latitude = index / 200 + parseFloat(item.latitude)
        //   item.longitude = index / 200 + parseFloat(item.longitude)
        // })
        // // console.log(this.merchantInfos)
        // /** 模拟数据 **/
        this.merchantInfos = res
        this.$apply()
      }
    }
    // 设置场景经纬度
    async _setSenceLocation(id) {
      // const res = this.senceInfos['' + id]
      // this.latitude = res.latitude
      // this.longitude = res.longitude
      this.latitude = this.merchantInfos[0].latitude
      this.longitude = this.merchantInfos[0].longitude
      this.$apply()
    }
    // 添加当前场景icon
    async _addSenceIcon() {
      let obj = this.senceInfos[0]
      this.markers.push(obj)
    }
    // 添加map上的图标
    async _addIcons() {
      let markers = []
      this.merchantInfos.map((item, index) => {
        let icon = 'black_'
        let w = 26
        let h = 26
        if (this.activeMarkerId === item.id) {
          icon = 'red_'
        }
        if (index === 0) {
          icon = 'red_'
          w = 30
          h = 30
        }
        markers.push({ // icon-black_baby@2x
          iconPath: `./icon-${icon + item.industry.code_name}@2x.png`,
          id: item.id,
          latitude: item.latitude,
          longitude: item.longitude,
          width: w,
          height: h,
          hasActivity: item.has_activity,
          merchantId: item.merchant_id
        })
      })
      this.markers = markers
      this.$apply()
      this._setPolyline()
    }
    // 设置控件
    async _setControls() {
      const res = await wepy.getSystemInfo()
      let width = res.windowWidth
      let height = res.windowHeight - 190 - 50
      // 判断是否有控件
      if (this.controls.length > 0) return
      this.controls.push({
        id: 1,
        iconPath: './icon-s_return@2x.png',
        clickable: true,
        position: {
          width: 36,
          height: 36,
          left: width - 50,
          top: height
        }
      })
    }
    // 清除
    onHide() {
      this._clearMapData()
    }
    // 清理地图数据
    _clearMapData() {
      this.merchantInfos = []
      this.senceInfos = {}
      this.markers = []
      this.$apply()
    }
    // icon关联商铺
    async setNav(e) {
      // 商铺关联icon
      let id = e.markerId
      let data = {}
      this.merchantInfos.forEach((item, index) => {
        if (item.id === id) {
          this.navIndex = index
          data = item
          this.$apply()
        }
      }) // leftIndex
      this.itemId = this.navIndex
      this.topFlag = this.navIndex
      this.translateMarker(data)
      this.$apply()
    }
    // 定位到中间
    translateMarker(e) {
      // console.log(e)
      // this.mapContext.translateMarker({
      //   markerId: e.id,
      //   autoRotate: true,
      //   duration: 1000,
      //   destination: {
      //     latitude: e.latitude,
      //     longitude: e.longitude
      //   },
      //   animationEnd() {
      //     console.log('animation end')
      //   }
      // })
      this.longitude = e.longitude
      this.latitude = e.latitude
      this.$apply()
    }
    // 商铺关联icon
    async setIcons(e) {
      let markerId = e.id
      // 点击当前或家或公司return
      if (markerId <= 0) {
        return
      }
      // 如果id相同则return
      if (this.activeMarkerId === markerId) {
        return
      }
      this._scaleMarker(0)
      // 获取店家信息
      this.activeMarkerId = markerId
      let currentMerchant = this.markers.find((item) => item.id === markerId)
      currentMerchant && await this._getMerchantDetail(currentMerchant.merchantId)

      // 改变店家显示状态
      await this._setCurrentMerchantStatus()
      this.translateMarker(e)
    }

    // 设置路线
    _setPolyline(loc, tar) {
      // 判断源头坐标
      this.markers.forEach((item, index) => {
        if (this.markers[index + 1]) {
          let tmp = {
            points: [
              {
                latitude: this.markers[index].latitude,
                longitude: this.markers[index].longitude
              }, {
                latitude: this.markers[index + 1].latitude,
                longitude: this.markers[index + 1].longitude
              }
            ],
            color: '#706B82AA',
            width: 2,
            dottedLine: true
          }
          this.polyline.push(tmp)
          this.$apply()
        }
      })
      this.$apply()
    }
    // 移动到当前位置
    moveToLocation() {
      this.mapContext.moveToLocation()
    }
    // 缩放地图标记点尺寸
    _scaleMarker(type) {
      const index = this.bigMarkerIndex
      if (!this.markers) return
      if (this.markers[index]) {
        this.markers[index].width = type === 1 ? 30 : 26
        this.markers[index].height = type === 1 ? 30 : 26
        this.markers[index].iconPath = type === 1 ? this.markers[index].iconPath.replace('black', 'red') : this.markers[index].iconPath.replace('red', 'black')
      }
      this.$apply()
    }
    // 获取商家详细信息
    async _getMerchantDetail(id) {
      let data = this.merchantInfos.filter(item => {
        return item.merchant_id === id
      })
      this.currentMerchant = data[0]
      wepy.setStorageSync('currentMerchant', this.currentMerchant)
      this.$apply()
    }
    regionchange() {
      // 切换地图时事件
    }
    methods = {
      offShop (item, key) {
        console.log(key)
        wepy.setStorageSync('merchant_id', item.merchant_id)
        if (key * 1 === 2) {
          wepy.navigateTo({  // 快捷买单
            url: `/pages/pay/pay`
          })
        } else {
          wepy.switchTab({
            url: `/pages/recommend/recommend`
          })
        }
      },
      // 切换导航
      swBindchange (e) {
        let id = e.detail.current
        this.topFlag = id
        let res = this.merchantInfos.find((item, index) => {
          return id === index
        })
        this.setIcons(res)
        this.$apply()
      },
      // 点击控件
      controltap(e) {
        this.moveToLocation()
      },
      // 点击气泡时触发
      async markertap(e) {
        console.log(e)
        let markerId = e.markerId
        // 点击当前或家或公司return
        if (markerId <= 0) {
          return
        }
        // 如果id相同则return
        if (this.activeMarkerId === markerId) {
          return
        }
        this._scaleMarker(0)
        // 获取店家信息
        this.activeMarkerId = markerId
        let currentMerchant = this.markers.find((item) => item.id === markerId)
        currentMerchant && await this._getMerchantDetail(currentMerchant.merchantId)

        // 改变店家显示状态
        await this._setCurrentMerchantStatus()
        this.setNav(e)
        // await this._addIcons()
      }
    }
    // 设置当前店家信息状态
    _setCurrentMerchantStatus() {
      this.$apply()
      this.activeIndex = 0
      this.transition = ''
      this.transform = 'translate3d(0, 0, 0)'
      this.bigMarkerIndex = this.markers.findIndex((item) => item.id === this.activeMarkerId)

      this.$apply()
      setTimeout(() => {
        if (!this.showSlide) {
          this.showSlide = true
        }
        this.transition = 'all .5s'
        this.$apply()
      }, 500)
      // this._setPolyline(this.activeMarkerId) // 设置路线
      this._scaleMarker(1)
    }

    // 分享
    onShareAppMessage() {
      let merchantId = wepy.getStorageSync('merchantId')
      return {
        title: wepy.getStorageSync('shop').shop_name,
        path: `/pages/square/square?merchantId=${merchantId}`
      }
    }

    config = {
      navigationBarTitleText: ''
    }
  }

</script>
<style lang="stylus">
  @import "../../common/stylus/variable.styl"
  @import "../../common/stylus/mixin.styl"
  .view-page
    display: flex
    flex-direction: column
    height: 100vh
    .view-scroll
      height: 190px
      box-shadow: 0 6px 4px 0 rgba(0,0,0,0.06);
      background: #FFFFFF
      position: relative
      .swiper
        height: 160px
        border-radius: 4px
        display: flex
        .item-swi
          height 160px
          text-align: center
          position: relative
          .swiper-info
            position: absolute
            top: 0
            left: 0
            right: 0
            bottom: 0
            z-index: 1
            height: 100%
            width: 94%
            margin: auto
            opacity: 0.5
            background-image: linear-gradient(-90deg, #000000 1%, #000000 100%)
            border-radius: 4px
          .swiper-info-s
            position: absolute
            top: 0
            left: 0
            right: 0
            bottom: 0
            z-index: 2
            height: 100%
            width: 94%
            margin: auto
            border-radius: 4px
            .swiper-info-title
              height: 60px
              margin: 0px 10px
              .swiper-info-shop
                justify-content:space-between
                display: flex
                padding: 10px 0px 6px 0px
                .view_1
                  color: $color-white
                  font-family: $font-family-meddle
                  font-size: $font-size-medium-x
                .view_2
                  font-family: $font-family-light
                  font-size: $font-size-small-s
                  color: $color-white
                  line-height: 20px
              .swiper-info-remark
                justify-content:space-between
                display: flex
                .view_1
                  display: flex
                  flex-direction: row
                  .view_1_1
                    line-height: 18px
                    width: 74px
                    height: 18px
                    border-radius: 4px
                    color: $color-white
                    font-family: $font-family-regular
                    font-size: $font-size-small-s
                    position: relative
                    margin-right: 15px
                    .bg
                      position: absolute
                      top: 0
                      left: 0
                      width: 74px
                      height: 18px
                      opacity: 0.5
                      background: #000000
                      border-radius: 4px
                      z-index: -1
                  .view_1_2
                    width: 18px
                    height: 18px
                    background: #FF4E00
                    border-radius: 4px
                    font-family: $font-family-regular
                    font-size: $font-size-small-s
                    color: #FFFFFF
                    line-height: 18px
                    text-align: center
                    margin-right: 5px
                .view_2
                  font-family: $font-family-light
                  font-size: $font-size-small-s
                  color: $color-white
                  width: 8px
                  height: 10px
                  margin-top: 4px
                  image
                    width: 100%
                    height: 100%
            .border-1px
              opacity: 0.22
              border: .5px solid $color-white
              width: 94%
              margin: auto
            .swiper-info-nav
              display: flex
              justify-content: space-around
              flex-direction: row
              z-index: 1
              .nav-item
                width: 50px
                height: 84.5px
                margin-top: 13.5px
                image
                  width: 50px
                  height: 50px
                view
                  color: $color-white
                  font-family: $font-family-regular
                  font-size: $font-size-small
                  line-height: 24px
          .item-img
            border-radius: 4px
            width: 94%
            height: 100%
            // opacity: 0.5
            // background-image: linear-gradient(-90deg, #000000 1%, #000000 100%)
      .swiper-active
        height: 5px
        text-align: center
        display: flex
        flex-direction: row
        .swiper-active-t
          margin: auto
          .item-swi
            width: 5px
            height: 5px
            background: #D8D8D8
            border-radius: 100%
            display: inline-block
            margin: 0px 3px
            transition: all .3s
          .item-swi.action
            transition: all .3s
            width: 10px
            border-radius: 100px
            background: #706B81
  #map
    flex: 1
    width: 100vw
    .modal-bg-wrapper
      height: 1px
      position: absolute
      top: 0
      left: 0
      display: flex
      padding: 0
      box-sizing: border-box
      box-shadow: 0 6px 4px 0 rgba(0,0,0,0.06);
      left: 0
      top: 0
</style>
