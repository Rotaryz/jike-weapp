<template>
  <view class="my-bargain">
    <repeat for="{{myList}}" key="index" item="item" index="index">
      <bargain-mine :industryColor.sync="industryColor" :industry.sync="industry" :bargainCoupon.sync="item"></bargain-mine>
    </repeat>
  </view>
  <Underline></Underline>
  <view class="ro-share-none" wx:if="{{!myList.length}}">
    <image class="ro-share-none-img" wx:if="{{imageUrl}}" src="{{imageUrl + '/defaults/b-image/common/pic-empty_city@2x.png'}}"></image>
    <view class="ro-share-none-text">暂无数据</view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import base from 'common/mixins/base'
  import URIS from 'common/js/config'
  import {ERR_OK} from 'api/base'
  import BargainMine from '@/base/bargain-mine/bargain-mine'
  import Bargain from 'api/bargain'
  import Underline from '@/base/underline-block/underline-block'

  export default class myBargain extends wepy.page {
    mixins = [base]

    config = {
      navigationBarTitleText: '我的砍价'
    }

    data = {
      imageUrl: URIS.image,
      myList: [],
      myPage: 1,
      nothing: false,
      currentPage: '',
      title: ''
    }
    async onReachBottom() {
      if (!this.nothing) {
        this.myPage++
        let res = await this.myBargainList()
        this.myList.push(...res)
        if (!res.length) {
          this.$invoke('Underline', 'show')
          this.nothing = true
        }
      }
    }
    onShareAppMessage(res) {
      let item = res.target.dataset.item
      this.title = `原价${item.promotion_price}元的超值优惠双人套餐，底价只要${item.bottom_price}元，一起砍完一起拿！`
      this.currentPage = `/pages/coupon-detail/coupon-detail?s=bargain&id=${item.promotion_id}&a=${item.activity_id}&m=${item.merchant_id}`
      if (res.from === 'button') {
        // 来自页面内转发按钮
      }
      return {
        title: this.title,
        path: this.currentPage,
        success: async () => {
          // 转发成功
          await this._getSharePrize()
          await this._getShareSoya()
          this.loaded()
        },
        fail: (res) => {
          // 转发失败
          console.log(res)
        }
      }
    }
    async onLoad() {
      await this.showIndustry()
      this.myList = await this.myBargainList() || []
      if (this.myList.length && this.myList.length < 10) {
        this.$invoke('Underline', 'show')
      }
      this._groupTimePlay()
      this.$apply()
    }

    async myBargainList() {
      let data = {page: this.myPage}
      let res = await Bargain.myBargain(data)
      this.loaded()
      res = this.infoRes(res)
      res = res.map((item) => {
        item.end_ats = '00天00时00分00秒'
        return item
      })
      return res
    }

    _groupTimePlay() {
      clearInterval(this.timer)
      this.groupEndTime = this._groupTimeCheckout(this.endTime)
      this.myList = this.myList.map((item) => {
        let endTime = this._groupTimeCheckout(item.end_at_timestamp)
        item.end_ats = `${endTime.day}天${endTime.hour}时${endTime.minute}分${endTime.second}秒`
        return item
      })
      this.$apply()
      this.timer = setInterval(() => {
        this.groupEndTime = this._groupTimeCheckout(this.endTime)
        this.myList = this.myList.map((item) => {
          let endTime = this._groupTimeCheckout(item.end_at_timestamp)
          item.end_ats = `${endTime.day}天${endTime.hour}时${endTime.minute}分${endTime.second}秒`
          return item
        })
        this.$apply()
      }, 1000)
    }

    // 定时器
    _groupTimeCheckout(time) {
      let nowSecond = parseInt(Date.now() / 1000)
      let differ = time * 1 - nowSecond
      let day = Math.floor(differ / (60 * 60 * 24))
      day = day >= 10 ? day : '0' + day
      let hour = Math.floor(differ / (60 * 60)) - (day * 24)
      hour = hour >= 10 ? hour : '0' + hour
      let minute = Math.floor(differ / 60) - (day * 24 * 60) - (hour * 60)
      minute = minute >= 10 ? minute : '0' + minute
      let second = Math.floor(differ) - (day * 24 * 60 * 60) - (hour * 60 * 60) - (minute * 60)
      second = second >= 10 ? second : '0' + second
      let times
      if (differ > 0) {
        times = {
          day,
          hour,
          minute,
          second
        }
      } else {
        times = {
          day: '00',
          hour: '00',
          minute: '00',
          second: '00'
        }
      }
      return times
    }

    infoRes(res) {
      if (res.error === ERR_OK) {
        return res.data
      }
    }

    components = {
      'bargain-mine': BargainMine,
      Underline

    }
  }
</script>

<style lang="stylus">
  @import '../../common/stylus/variable'
  @import '../../common/stylus/mixin'

  .ro-share-none
    position: fixed
    top: 45.3vw
    row-center()
    .ro-share-none-img
      width: 86px
      height: 71px
    .ro-share-none-text
      font-size: $font-size-small
      margin-top: 10px
      text-align: center
      color: $color-text
      font-family: $font-family-light
</style>
